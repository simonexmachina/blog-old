/*
 * These are Sass variables used to make our CSS more dynamic by re-using
 * common property values throughout our styles. Don't overdo it.
 *
 * Table of Contents:
 *
 * Bourbon
 * Breakpoint
 * Typography
 * Colors
 * Gradients
 * Global Styles
 *
 */
/* =============================================================================
   Bourbon 
   ============================================================================= */
/* =============================================================================
   Breakpoint
   ============================================================================= */
/*
 * Breakpoint Sass 2.0.6
 * Last updated: July 2013
 * Copyright: Mason Wendell 2012 - MIT Licensed
 * Source: https://github.com/canarymason/breakpoint
 */
/* =============================================================================
   Typography
   ============================================================================= */
/* =============================================================================
   Colors
   ============================================================================= */
/* =============================================================================
   Gradients
   ============================================================================= */
/*
 * Auto Gradients
 *
 * If the gradient mixin is called with 1 value: gradient(#444) - then a second
 * color which is 10% lighter than the entered value will be auto-generated. If
 * the gradient mixin is called with 2 values: gradient(#444,#666) - then those
 * two values will be used instead, as normal.
 */
/* =============================================================================
   Global Elements
   ============================================================================= */

/* =============================================================================
   Animations
   ============================================================================= */
@-webkit-keyframes fade-out {
  from {
    opacity: 1; }

  to {
    opacity: 0; } }

@-moz-keyframes fade-out {
  from {
    opacity: 1; }

  to {
    opacity: 0; } }

@keyframes fade-out {
  from {
    opacity: 1; }

  to {
    opacity: 0; } }

/*
 * The icons used in Ghost are the Pictos set by Drew Wilson - http://pictos.css
 * They are embedded via a custom icon font built with http://icomoon.io
 *
 * Table of Contents:
 * 
 * Font Face
 * Icon Element
 * Icon Variables / Short Names
 * Usage
 */
/* =============================================================================
   The Font Face
   ============================================================================= */
/* Generated by icomoon.co */
@font-face {
  font-family: 'Icons';
  src: url('../fonts/icons.eot');
  src: url('../fonts/icons.eot?#iefix') format('embedded-opentype'), url('../fonts/icons.woff') format('woff'), url('../fonts/icons.ttf') format('truetype'), url('../fonts/icons.svg#icons') format('svg');
  font-weight: normal;
  font-style: normal; }

/* =============================================================================
   The Icon Element
   ============================================================================= */
/*
 * Special use case for when we want to add an icon after an element rather
 * than before it. For things like dropdowns.
 */
/* =============================================================================
   Icon Variables / Short Names
   ============================================================================= */
/* 
 * For accessibility, icon characters in the icon font are stored in Unicode's
 * Private Use Area characters. This means that screen readers won't attempt to
 * read them out loud. For code maintainability, we then store these Unicode
 * references inside Sass variables.
 */
/* =============================================================================
   Usage
   ============================================================================= 

To create a button with a label that is prefixed with a camera icon, we might
write our Sass something like this:

#button {
    display: block;
    width: 200px;
    height: 40px;
    @include icon($i-camera, 16px, #fff) {vertical-align:-10%;};
}

Thi would then output full CSS something like this:

#button {
    display: block;
    width: 200px;
    height: 40px;
}

#button:before {
    content: "\e02a";
    size: 16px;
    color: #fff;
    font-family: "Icons";
    font-weight: normal;
    font-style: normal;
    vertical-align: -10%;
    text-transform:none;
    speak: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
}

*/
html {
  font: normal 81.2%/1.65 'proxima-nova', sans-serif; }

h1, h2, h3, h4, h5, h6 {
  color: #242628;
  text-rendering: optimizeLegibility;
  line-height: 1;
  margin-top: 0; }

h2 {
  padding-top: 0.8em;
  margin-top: 0.8em;
  border-top: #edece4 1px solid; }

h1 a:hover {
  text-decoration: none;
  box-shadow: #28c0b7 0 -2px 0 inset; }

h2 a:hover {
  text-decoration: none;
  box-shadow: #28c0b7 0 -1px 0 inset; }

h3 a:hover, h4 a:hover, h5 a:hover, h6 a:hover {
  text-decoration: none;
  box-shadow: #28c0b7 0 -1px 0 inset; }

p, ul, ol {
  margin: 1.6em 0; }

ol ol, ul ul, ul ol, ol ul {
  margin: 0.4em 0; }

a {
  color: #28c0b7;
  text-decoration: none;
  -webkit-transition: all 0.15s ease-in-out;
  -moz-transition: all 0.15s ease-in-out;
  transition: all 0.15s ease-in-out; }
  a:hover {
    text-decoration: underline; }
  a.highlight {
    color: #f2a925;
    font-weight: bold; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #edece4;
  margin: 3.2em 0;
  padding: 0; }

blockquote {
  margin: 1.6em 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 0 1.6em 0 1.6em;
  border-left: #edece4 0.6em solid; }
  blockquote p {
    margin: 0.8em 0;
    font-size: 1.2em;
    font-weight: 300; }
  blockquote small {
    display: inline-block;
    margin: 0.8em 0 0.8em 1.5em;
    font-size: 0.9em;
    color: #aaa9a2; }
    blockquote small:before {
      content: '\2014 \00A0'; }
  blockquote cite {
    font-weight: bold; }
    blockquote cite a {
      font-weight: normal; }

dl {
  margin: 1.6em 0; }
  dl dt {
    float: left;
    width: 180px;
    overflow: hidden;
    clear: left;
    text-align: right;
    text-overflow: ellipsis;
    white-space: nowrap;
    font-weight: bold;
    margin-bottom: 1em; }
  dl dd {
    margin-left: 200px;
    margin-bottom: 1em; }

mark {
  background-color: #ffc336; }

code, tt {
  font-family: Inconsolata, monospace;
  font-size: 0.85em;
  white-space: pre-wrap;
  background: #f1f0ea;
  border: 1px solid #dddbcc;
  border-radius: 2px;
  padding: 1px 3px; }

pre {
  margin: 1.6em 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  background: #f1f0ea;
  border: 1px solid #dddbcc;
  width: 100%;
  padding: 10px;
  font-family: Inconsolata, monospace;
  font-size: 0.9em;
  white-space: pre;
  overflow: auto;
  border-radius: 3px; }
  pre code, pre tt {
    font-size: inherit;
    white-space: -moz-pre-wrap;
    white-space: pre-wrap;
    background: transparent;
    border: none;
    padding: 0; }

kbd {
  display: inline-block;
  margin-bottom: 0.4em;
  padding: 1px 8px;
  border: #cccccc 1px solid;
  color: #242628;
  text-shadow: white 0 1px 0;
  font-size: 0.9em;
  font-weight: bold;
  background: #f4f4f4;
  border-radius: 4px;
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 1px 0 0 white inset; }

table {
  margin: 1.6em 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  width: 100%;
  max-width: 100%;
  background-color: transparent; }
  table th, table td {
    padding: 8px;
    line-height: 20px;
    text-align: left;
    vertical-align: top;
    border-top: 1px solid #edece4; }
  table th {
    color: #aaa9a2; }
  table caption + thead tr:first-child th, table caption + thead tr:first-child td, table colgroup + thead tr:first-child th, table colgroup + thead tr:first-child td, table thead:first-child tr:first-child th, table thead:first-child tr:first-child td {
    border-top: 0; }
  table tbody + tbody {
    border-top: 2px solid #edece4; }
  table table table {
    background-color: white; }
  table tbody > tr:nth-child(odd) > td, table tbody > tr:nth-child(odd) > th {
    background-color: #f7f7f3; }
  table.plain tbody > tr:nth-child(odd) > td, table.plain tbody > tr:nth-child(odd) > th {
    background: transparent; }
